Q.3 Data Types in JavaScript.
-----------------------------
1] Number:

The number type represents both integer and floating point numbers.
There are many operations for numbers, e.g. multiplication *, division /, addition +, subtraction -, and so on.

Ex.
let no=123.23;
no=123;
=====================================================================
2] BigInt:

In JavaScript, the “number” type cannot represent integer values larger than (2^53-1) (that’s 9007199254740991), or less than -(-2^53-1) for negatives. It’s a technical limitation caused by their internal representation.

BigInt type was recently added to the language to represent integers of arbitrary length.

Ex.

const bigInt = 1234567890123456789012345678901234567890n;
==============================================================
3]String:

A string in JavaScript must be surrounded by quotes.

In JavaScript, there are 3 types of quotes.

    Double quotes: "Hello".
    Single quotes: 'Hello'.
    Backticks: `Hello`.

Ex.

let str = "Hello";
let str2 = 'Single quotes are ok too';
let phrase = `can embed another ${str}`;
=================================================================
4]Boolean(logical type):

The boolean type has only two values: true and false.

Ex.

let nameFieldChecked = true; // yes, name field is checked
let ageFieldChecked = false; // no, age field is not checked

Boolean value also used for comparisons:

let isGreat= 4>1;
alert(isGreat);//true:comparision result is true.
==================================================================
5]The "null" value:

The special null value does not belong to any of the types described above.

It forms a separate type of its own which contains only the null value.

Ex.

let age = null;
==================================================================
6]The 'undefined' value:

The special value undefined also stands apart. It makes a type of its own, just like null.

The meaning of undefined is “value is not assigned”.

Ex.

let hello;
alert(hello);//it shows undefined.
==================================================================
7] Object:

The object type is special.

All other types are called “primitive” because their values can contain only a single thing (be it a string or a number or whatever). In contrast, objects are used to store collections of data and more complex entities.

Ex.

let user = new Object(); // "object constructor" syntax

let user = {     // an object
  name: "John",  // by key "name" store value "John"
  age: 30        // by key "age" store value 30
};
===================================================================
